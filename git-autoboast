#!/usr/bin/bash
#
# Tweet about the last commit in a Git repo.
#
# Requires an application which tweets a string to be in the user's path.
# (my twitterminal does the job)
#

# program which sends tweet
# must tweet argument 1 & be smart about any length-checking (because of how
# Twitter shortens URLs)
twitterer="$HOME/bin/twitterminal"

# GitHub user whom the repo belongs to
github_user="raehik"

# we do our own length-checking. Twitter shortens all HTTPS URLs to 23
# characters: HTTPS because we send them to GitHub to view the commit
short_url_length_https=23

usage() {
    cat <<EOF
Usage: ${0##*/} [options]
Tweet about a commit you made on a Git[Hub] project.
If no commit hash is provided, the most recent commit is assumed.

  Options:
    -c              commit hash to tweet about (otherwise, last commit)
    -d              Git repository directory
    -h              display this help message
EOF
}

while getopts "c:dh" opt; do
    case $opt in
        c) # choose commit
            commit_hash="$OPTARG"
            ;;
        d) # change directory
            cd "$OPTARG"
            ;;
        h) # display usage message
            usage
            exit 0
            ;;
    esac
done

if [ ! "$commit_hash" ]; then
    echo "no commit provided -- using HEAD"
    commit_hash="HEAD"
fi

# get a ton of info
# TODO: make these commands take only a short hash as input, so we can generate
#       a tweet for *any* commit
# git_root assumes that the GitHub project name == the Git directory name
# TODO: add option to specify GitHub project name, I guess? will I ever use it?
git_root="$(basename "$(git rev-parse --show-toplevel)")"
last_hash_short="$(git rev-parse --short $commit_hash)"
last_hash_full="$(git rev-parse $commit_hash)"
last_message="$(git log $commit_hash -1 --pretty=%s)"
last_author="$(git log $commit_hash -1 --pretty=%aN)"

# should check that all work, but this'll do for now (dunno what errors you get
# if you provide an incorrect hash)
if [ $? -ne 0 ]; then
    echo "${0##*/}: error: a Git command failed. Do you have Git installed, are you in a repository, and does the commit hash you provided exist?"
    exit 1
fi

# current message w/o URL (shortened by Twitter to 23 chars for HTTPS)
message="\"${last_message}\" - commit $last_hash_short by $last_author @ $github_user/$git_root ()"

# get full message length, adding t.co URL
message_length=$(($(echo -n "$message" | wc -c) + $short_url_length_https))

# if OVER 140 -- exactly 140 is fine
if [ $message_length -gt 140 ]; then
    # count chars in $last_message
    last_message_length=$(echo -n "$last_message " | wc -c)

    # find how many chars we're over by
    chars_over=$(($message_length - 140))

    # set how much of message to keep
    # minus an extra 3 so I can append '...'
    # ...minus another 1 because of zero-based indexing T_T
    chars_to_keep=$(($last_message_length - $chars_over - 3 - 1))

    # re-set $last_message
    last_message="${last_message:0:$chars_to_keep}..."
fi

message_final="\"${last_message}\" - commit $last_hash_short by $last_author @ $github_user/$git_root (https://github.com/$github_user/$git_root/commit/$last_hash_full)"

echo "Tweeting: \"$message_final\""
$twitterer "$message_final"
