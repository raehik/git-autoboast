#!/usr/bin/bash
#
# Tweet about the last commit in a Git repo.
#

# HTTPS because we send them to GitHub to view the commit
short_url_length_https=23

# if we're given an argument, assume it's a git repo and cd to it
# otherwise we'll hope that we're already in a git repo ;)
if [ -n "$1" ]; then
    cd "$1"
fi

# get a ton of info
git_root="$(basename "$(git rev-parse --show-toplevel)")"
last_hash_short="$(git rev-parse --short HEAD)"
last_hash_full="$(git rev-parse HEAD)"
last_message="$(git log -1 --pretty=%s)"
last_author="$(git log -1 --pretty=%aN)"

# current message w/o URL (shortened by Twitter to 23 chars for HTTPS)
message="\"${last_message}\" - commit $last_hash_short by $last_author @ raehik/$git_root ()"

# get full message length, adding t.co URL
message_length=$(($(echo -n "$message" | wc -c) + $short_url_length_https))

# if OVER 140 -- exactly 140 is fine
if [ $message_length -gt 140 ]; then
    # count chars in $last_message
    last_message_length=$(echo -n "$last_message " | wc -c)

    # find how many chars we're over by
    chars_over=$(($message_length - 140))

    # debug message
    echo "too long by $chars_over - shortening commit message..."

    # set how much of message to keep
    # minus an extra 3 so I can append '...'
    # ...minus another 1 because of zero-based indexing T_T
    chars_to_keep=$(($last_message_length - $chars_over - 3 - 1))

    # re-set $last_message
    last_message="${last_message:0:$chars_to_keep}..."
fi

message_final="\"${last_message}\" - commit $last_hash_short by $last_author @ raehik/$git_root (https://github.com/raehik/$git_root/commit/$last_hash_full)"

echo "message: $message"
echo "message length: $messag__length"
echo "commit message: $last_message"
echo "commit message length: $last_message_length"
echo "chars of commit message to keep: $chars_to_keep"
echo "new commit message: $last_message"
echo "final message: $message_final"

tweet "$message_final"
